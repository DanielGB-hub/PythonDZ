# 3) Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные
# и заполнять список только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
# введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


class ExcList:
    def __init__(self, *args):
        self.m_list = []

    def method_list(self):
        while True:
            answer = input("Введите число или 'stop' и нажмите Enter: ")
            if answer == "stop":
                return f"Итоговый список: {self.m_list}\n"
            else:
                try:
                    answer = int(answer)
                    self.m_list.append(answer)
                except:
                    print("Это не число! Значение не будет добавлено в список!")


print("Данная программа принимает значения от пользователя. Если это число, то оно будет внесено в список.\n"
      "Если значение - строка, то оно не будет добавлено в список. \n"
      "Чтобы остановить ввод чисел введите 'stop'.\n")
try_except = ExcList()
print(try_except.method_list())
