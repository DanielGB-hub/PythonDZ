# Создать текстовый файл (не программно), сохранить в нем несколько строк,
# выполнить подсчет количества строк, количества слов в каждой строке.

"""
В данной программе использованы 3 функции:
1. f_info - возвращает информацию о кодировке исходного файла
2. dir_l - покажет содержимое директории, из которой вы откроете данную программу
3. in_f - считает содержимое файла, выведет это содержимое построчно на экран, вернет содержимое файла в виде списка,
элементами которого будут строки и закроет файл.

Словами считаю любой символ, разделенный пробелом. Может, это не правильно, но я столкнулся с разными мнениями
по поводу того, что считается словом.
Например:
    'При подсчёте слов не учитываются союзы (и, но, или, а, потому что и др.) , предлоги (у, при, возле, около и др.),
а также частицы (не, ни, бы, же, ведь и др.) . Местоимения (я, мы, ты, вы, они, каждый, который, их, наш, ваш и др. )
считаются за отдельные слова при подсчёте.'

Наверное, так считают слова заказчики у копирайтеров. Что б платить меньше.

При сдаче переводов по английскому считалось вообще все - все, что разделено пробелом. Вот и я так посчитал.
"""

import os
from chardet.universaldetector import UniversalDetector


def f_info(f_name):  # функция чтения информации о кодировке
    detector = UniversalDetector()
    with open(f_name, 'rb') as fb:
        for line in fb:
            detector.feed(line)
            if detector.done:
                break
        detector.close()
    # print(detector.result)  # раскомментировать, чтобы посмотреть информацию о файле
    return detector.result.get('encoding')


def dir_l():  # функция чтения списка файлов в локальной директории
    print("Список файлов в локальной директории: ")
    dir_list = os.listdir(path=".")  # показываем содержимое директории, в которой лежит файл задания
    print(dir_list)


def in_f(f_name):  # функция чтения файла с разной кодировкой и вывода его содержимого
    if f_info(f_name) == "utf-8" or f_info(f_name) == "UTF-8-SIG":
        print(f"Кодировка: {f_info(f_name)}")
        f_obj = open(f_name, "r", encoding="utf-8-sig")
    elif f_info(f_name) == "windows-1251":
        print(f"Кодировка: {f_info(f_name)}")
        f_obj = open(f_name, "r", encoding="windows-1251")
    elif f_info(f_name) == "ascii":
        print(f"Кодировка: {f_info(f_name)}")
        f_obj = open(f_name, "r", encoding="ascii")
    print()
    content_list_def = []
    print("Содержимое файла:\n ")
    content_f = f_obj.readlines()
    for el_f in content_f:  # выводим содержимое построчно
        print(el_f.replace('\n', ''))  # делаем замену, что б строки не выводились через пустые строки
        content_list_def.append(el_f.replace('\n', ''))
    f_obj.close()  # закрываем файл
    print()
    if f_obj.closed == 1:
        print("Файл закрыт")
    return content_list_def  # выводим содержимое в список для последующей обработки


print("Данная программа посчитает количество строк и слов в строках в выбранном текстовом файле.")
dir_l()  # смотрим список файлов
try:  # обработка исключения "Такой файл не найден"
    try:  # обработка исключения "Кодировка не распознана"
        file_name = input("Выберете из списка имя текстового файла, который вы хотите открыть: ")
        content_list = in_f(file_name)  # показываем содержимое файла и возвращаем это содержимое списком
        result_list = []  # создаем список, в который потом запишем значение количества слов в строках
        n = 0  # счетчик строк
        for el in content_list:  # считаем количество строк
            n += 1
            i = len(el.split())  # подсчитываем количество слов в строках
            result_list.append(i)  # добавляем значение количества слов в строках в список
        print()
        print(f"Количество строк в данном файле: {n}\n")
        print(f"Количество слов в каждой строке в формате '№ строки'  :  'количество слов':\n")
        for ind, el in enumerate(result_list, 1):  # выводим результат
            print(f"В строке № {ind}  :  {el} слов")
    except NameError:
        print(f"Кодировка файла не распознана, пересохраните файл в одной из кодировок utf-8, windows-1251 или ascii\n"
              f"и попробуйте снова")
except FileNotFoundError:
    print("Такой файл не найден")
