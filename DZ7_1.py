# 1) Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
# объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно —
# первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

print("Эта программа складывает заранее созданные матрицы. Если вам нужно сложить другие матрицы,\n"
      "поменяйте их внутри кода.\n")


class Matrix:

    def __init__(self, m_list):
        self.m_list = m_list

    def __str__(self):  # перегрузка метода для вывода матрицы (с отступом 6 пробелов)
        for m_row in self.m_list:
            for i in m_row:
                print(f"{i:6}", end="")
            print()
        return "\n".join(map(str, self.m_list))

    def __add__(self, other):  # перегрузка метода для реализации сложения
        for i in range(len(self.m_list)):
            for j in range(len(other.m_list[i])):
                self.m_list[i][j] = self.m_list[i][j] + other.m_list[i][j]
        return Matrix.__str__(self)


matrix1 = Matrix([[2, 3, 4, 10], [5, 6, 7, 11], [0, 1, 8, 9]])  # тут вы можете задать свои матрицы
matrix2 = Matrix([[4, 3, 5, 12], [12, 3, 7, 9], [8, 0, 0, 1]])
print("Первая матрица:")
matrix1.__str__()
print("Вторая матрица:")
matrix2.__str__()
print("Итоговая матрица:")
matrix_result = (matrix1.__add__(matrix2))
