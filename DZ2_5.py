# 5) Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

list = [7, 5, 3, 3, 2]
print(f"Есть рейтинг: {list}. Данная программа добавит в этот рейтинг введенное Вами число")
print("и поставит его на первое/последнее места или в середину в соответствие с порядком рейтинга от большего к меньшему.")
new_el = int(input("Введите новое число в список рейтинга: "))
n = len(list) # - 'n' и 'm'  - это параметры, которые определяют индекс нового элемента в списке. Границы списка.
m = len(list) # - чем больше 'n' - тем дальше разместится новый элемент от начала списка, а чем больше 'm' - тем ближе к началу списка
for el in list: # алгоритм определения позиции нового элемента:
    if el < new_el:
        n -= 1 # из длины списка вычитаем по 1, пока не получим номер элемента (не индекс), где условие перестало выполняться
    elif el >= new_el:
        m -= 1 # из длины списка вычитаем по 1, пока не получим номер элемента (не индекс), где условие перестало выполняться
if n == 0:
    list.insert(0, new_el)
elif m == 0:
    list.append(new_el)
else:
    list.insert(n, new_el)
#print(n) # это число показывает, что новый элемент должен стоять после 4 элемента(с индексом 3) от начала списка.
# Новый элемент в списке будет иметь индекс 4, то есть то же число, что и номер элемента 4 (с индексом 3),
# так как по условию должен стоять после одинаковых элементов. В этом есть своя красота.
#print(m) # это число показывает, что новый элемент должен стоять после 1 элемента от конца списка.
# В сумме эти два числа всегда дадут количество элементов в списке перед добавлением нового элемента.
# Например: 4 и 1 - это n|....new_el1.|m, 5 и 0  - это n|.....new_el1|m, 3 и 2 - это n|...new_el1..|m
print(f"Новый список рейтинга: {list}")



